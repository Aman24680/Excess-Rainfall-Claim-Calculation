# -*- coding: utf-8 -*-
"""Claims_calculation_for_excess_rainfall.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FQBt7WOL__IivmyaiVDAmnqVowvFud2r
"""

import pandas as pd

# Reading the excel file with pandas library.
data = pd.read_excel("InRisk_Labs_Assignment.xlsx")
data.head()

# Data Manipulation
# There are some negative values which cannot be possible.
# There are some extreme values also present.
# The highest ever recorded rainfall in the world is 1825mm.
# So I replaced all the values above 2000 and below 0 to 0. To get the appropriate results.
x = data.Rainfall_mm[(data.Rainfall_mm < 0) | (data.Rainfall_mm > 2000)]
y =  x.tolist()
print(y)
data.replace(y,0,inplace=True)

# Created a new dataframe named data1 containing data of rainfall greater than 60mm
data1 = data[data.Rainfall_mm > 60]
data1.head()

# Here I find the unique values of the region using unique function
region = data1['Region'].unique()
region

# Count the number of days of excess rainfall according to region.
excess_rainfall_count = []
for i in region:
  excess_rainfall_count.append(len(data1[data1.Region == i]))
excess_rainfall_count

# Calculated the claim amount based on the given criterion using a for loop.
# Excess rainfall days <= 10: No claim
# Excess rainfall days between 11-30: ₹100/day
# Excess rainfall days between 31-50: ₹200/day
# Excess rainfall days >= 51: ₹300/day

Claim_amount = []
for i in excess_rainfall_count:
  amount = 0
  if i <= 10:
    pass
  elif 10<i<=30:
    amount = 100*(i-10)
  elif 30<i<=50:
    amount = 100*20 + 200*(i-30)
  else:
    amount = 100*20 + 200*20 + 300*(i-50)
  Claim_amount.append(amount)
Claim_amount

# Creating a data frame containing Region, Days of Excess Rainfall, Claim amount
Claim_calculation = pd.DataFrame({'Region' : region,
                                  'Days of Excess Rainfall':excess_rainfall_count,
                                  'Claim_amount' : Claim_amount})
Claim_calculation

# Converting the final output into excel file.
Claim_calculation.to_excel("Final Output.xlsx",index=False)